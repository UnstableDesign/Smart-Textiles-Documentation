
var documents = [{
    "id": 0,
    "url": "http://localhost:4000/404.html",
    "title": "404",
    "body": "404 Page does not exist!Please use the search bar at the top or visit our homepage! "
    }, {
    "id": 1,
    "url": "http://localhost:4000/node_modules/jszip/CHANGES/",
    "title": "Changelog",
    "body": "v3. 6. 0 2020 2021-02-09:  Fix: redirect main to dist on browsers (see #742) Fix duplicate require DataLengthProbe, utils (see #734) Fix small error in read_zip. md (see #703)v3. 5. 0 2020 2020-05-31:  Fix ‘End of data reached’ error when file extra field is invalid (see #544).  Typescript definitions: Add null to return types of functions that may return null (see #669).  Typescript definitions: Correct nodeStream’s type (see #682) Typescript definitions: Add string output type (see #666)v3. 4. 0 2020 2020-04-19:  Add Typescript type definitions (see #601). v3. 3. 0 2020 2020-04-1:  Change browser module resolution to support Angular packager (see #614). v3. 2. 2 2019-07-04:  No public changes, but a number of testing dependencies have been updated.  Tested browsers are now: Internet Explorer 11, Chrome (most recent) and Firefox (most recent). Other browsers (specifically Safari) are still supported however testing them on Saucelabs is broken and so they were removed from the test matrix. v3. 2. 1 2019-03-22:  Corrected built dist filesv3. 2. 0 2019-02-21:  Update dependencies to reduce bundle size (see #532).  Fix deprecated Buffer constructor usage and add safeguards (see #506). v3. 1. 5 2017-11-09:  Fix IE11 memory leak (see #429).  Handle 2 nodejs deprecations (see #459).  Improve the “unsupported format” error message (see #461).  Improve webworker compatibility (see #468).  Fix nodejs 0. 10 compatibility (see #480).  Improve the error without type in async() (see #481). v3. 1. 4 2017-08-24:  consistently use our own utils object for inheritance (see #395).  lower the memory consumption in generate* with a lot of files (see #449). v3. 1. 3 2016-10-06:  instanceof failing in window / iframe contexts (see #350).  remove a copy with blob output (see #357).  fix crc32 check for empty entries (see #358).  fix the base64 error message with data uri (see #359). v3. 1. 2 2016-08-23:  fix support of nodejs process. platform in generate* methods (see #335).  improve browserify/webpack support (see #333).  partial support of a promise of text (see #337).  fix streamed zip files containing folders (see #342). v3. 1. 1 2016-08-08:  Use a hard-coded JSZip. version, fix an issue with webpack (see #328). v3. 1. 0 2016-08-03:  utils. delay: use macro tasks instead of micro tasks (see #288).  Harden base64 decode (see #316).  Add JSZip. version and the version in the header (see #317).  Support Promise(Blob) (see #318).  Change JSZip. external. Promise implementation (see #321).  Update pako to v1. 0. 2 to fix a DEFLATE bug (see #322). v3. 0. 0 2016-04-13: This release changes a lot of methods, please see the upgrade guide.  replace sync getters and generate() with async methods (see #195).  support nodejs streams (in file() and generateAsync()).  support Blob and Promise in file() and loadAsync() (see #275).  add support. nodestream.  zip. filter: remove the defensive copy.  remove the deprecated API (see #253).  type is now mandatory in generateAsync().  change the createFolders default value (now true).  Dates: use UTC instead of the local timezone.  Add base64 and array as possible output type.  Add a forEach method.  Drop node 0. 8 support (see #270). v2. 6. 1 2016-07-28:  update pako to v1. 0. 2 to fix a DEFLATE bug (see #322). v2. 6. 0 2016-03-23:  publish dist/ files in the npm package (see #225).  update pako to v1. 0. 0 (see #261).  add support of Array in JSZip#load (see #252).  improve file name / comment encoding support (see #211).  handle prepended data (see #266).  improve platform coverage in tests (see #233 and #269). v2. 5. 0 2015-03-10:  add support for custom mime-types (see #199).  add an option to set the DEFLATE level (see #201).  improve the error message with corrupted zip (see #202).  add support for UNIX / DOS permissions (see #200 and #205). v2. 4. 0 2014-07-24:  update pako to 0. 2. 5 (see #156).  make JSZip work in a Firefox addon context (see #151).  add an option (createFolders) to control the subfolder generation (see #154).  allow Buffer polyfill in the browser (see #139). v2. 3. 0 2014-06-18:  don’t generate subfolders (see #130).  add comment support (see #134).  on ZipObject#options, the attributes date and dir have been deprecated and are now on ZipObject (see the upgrade guide).  on ZipObject#options, the attributes base64 and binary have been deprecated (see the upgrade guide).  deprecate internal functions exposed in the public API (see #123).  improve UTF-8 support (see #142). v2. 2. 2, 2014-05-01:  update pako to v0. 2. 1, fix an error when decompressing some files (see #126). v2. 2. 1, 2014-04-23:  fix unreadable generated file on Windows 8 (see #112).  replace zlibjs with pako. v2. 2. 0, 2014-02-25:  make the new operator optional before the JSZip constructor (see #93).  update zlibjs to v0. 2. 0. v2. 1. 1, 2014-02-13:  use the npm package for zlib. js instead of the github url. v2. 1. 0, 2014-02-06:  split the files and use Browserify to generate the final file (see #74) packaging change : instead of 4 files (jszip. js, jszip-load. js, jszip-inflate. js, jszip-deflate. js) we now have 2 files : dist/jszip. js and dist/jszip. min. js add component/bower support rename variable: ‘byte’ is a reserved word (see #76) add support for the unicode path extra field (see #82) ensure that the generated files have a header with the licenses (see #80)v2. 0. 0, 2013-10-20 JSZipBase64 has been renamed to JSZip. base64.    The data attribute on the object returned by zip. file(name) has been removed. Use asText(), asBinary(), asUint8Array(), asArrayBuffer() or asNodeBuffer().     Fix issue with Android browser   The compression/decompression methods now give their input type with the compressInputType and uncompressInputType attributes.  Lazily decompress data when needed and improve performance in general Add support for Buffer in Node. js.  Package for CommonJS/npm. v1. 0. 1, 2013-03-04:  Fixed an issue when generating a compressed zip file with empty files or folders, see #33.  With bad data (null or undefined), asText/asBinary/asUint8Array/asArrayBuffer methods now return an empty string, see #36. v1. 0. 0, 2013-02-14 First release after a long period without version. "
    }, {
    "id": 2,
    "url": "http://localhost:4000/about",
    "title": "About AdaCAD",
    "body": "		AdaCAD is a project of the Unstable Design Lab at the University of Colorado Boulder ATLAS Institute that aims to support the requirements of what we call  experimental weaving  but that has basic functions to support all weavers. 	What is Experimental Weaving?: 	Experimental weaving is a mentality more than a set of materials or practices. We see an experimental weaver as someone who considers structure, material, cloth, and artifact in tandem. At times, this leads us to investigate metallic yarns for teh purposes of handweaving sensors and interactive systems. At other times, it might mean adding bio-compoments to different sections of the weave to support different material changes over time. We support these by: 	How Does AdaCAD Support Experimental Weaving?: 	 Well, we aim to start by supporting the core functionality used across many weaving programs, such as designing a drawdown based on diffferent tieups and treadling, or visualizing the structure of the cloth.  		Showing a  yarn-view  of ones draft to track the paths and intersections of different materials within a woven draft			AdaCAD is a Living Project made by Researchers: 	We, the developers, are not a company looking to sell our product. Instead, we found an interest in building our own tools to support our practices and want to make them usable by groups beyond our lab. Making the tools, learning weaving, and working at the intersection of craft and engineering has led us to see how craft practices (interpreted as learning from materials, cultivated skill, humble practice) can foreground new value in innovation work. Specifically, we think the deep knowledge of material and structure by fiber artists and weavers can led to new, more sustainable and symbiotic, developments of technologies in the area of soft robotics, wearable computing, and composites. Alternatively, we see how the concepts of engineering can provide a defamiliarizing lens to our weaving practices.  	AdaCAD is an Open Source Project: 	 We were inspired by open source projects like Processing, Arduino, and Open Frameworks and want to offer AdaCAD as an equivalent for weavers. It will take us time to realize this vision, but we are exited about it and always willing to support those who want to help 	 		Related Resources	Experimental Weaving Resdiency	A mostly-annual open call for artists in residence at the Unstable Design Lab. 		 		More Information	 	Open Code	Want to do some creative coding within AdaCAD to realize some new designs?		 		 Fork AdaCAD on GitHub	 	Research	Curious To Read some of our Research on Experimental Weaving and Smart Textiles:		 		Read Craftspeople as Technical Collaborators			Read the Original AdaCAD Paper	 "
    }, {
    "id": 3,
    "url": "http://localhost:4000/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 4,
    "url": "http://localhost:4000/developers",
    "title": "For Developers",
    "body": "This website is built with Jekyll and Mediumish template for Jekyll. It's for demonstration purposes, no real content can be found. Mediumish template for Jekyll is compatible with Github pages, in fact even this demo is created with Github Pages and hosted with Github.  Documentation: Please, read the docs here. Questions or bug reports?: Head over to our Github repository! "
    }, {
    "id": 5,
    "url": "http://localhost:4000/ideas",
    "title": "Projects and Ideas",
    "body": "	The ideas page shows some of the prototypes and how tos that we have made to document our projects in the Unstable Design Lab.  	ideas:                                                                                             Exosekelton for Sedimentation             :       :                                                                               Laura                23 Apr 2021                                                                                                                                 Color Changing Pressable Fabric             :       Weave with Regions of Press Sensing and Color Change Designed and Woven by Laura Devendorf Electronics and PCB Designed by Chad Di Lauro:                                                                               Laura                23 Apr 2021                                                                                                                                 Multi-Component Weave             :       Designed By: Shanel Wu; Warps: 230; Shuttles: 6:                                                                               S                23 Apr 2021                                                                                                                                 A Fabric that Remembers             :       :                                                                               Laura                23 Apr 2021                                                                                                                                 Sensor Headband             :       The draft for this file uses four systems: two base systems for elastics and support structures, and two for integrated electronics. :                                                                               Sandra                23 Apr 2021                                                                                                                                 Hidden Chevrons             :       Hidden ChevronsDesigned By: Shanel Wu; Warps: 230; Shuttles: 3:                                                                               S                23 Apr 2021                                    Related Resources"
    }, {
    "id": 6,
    "url": "http://localhost:4000/",
    "title": "Home",
    "body": "      Featured:                                                                                                                                                                                                           Getting Started                              :               This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random. . . :                                                                                                                                                                       Laura                                24 Apr 2021                                                                                                                                                                                                                                                                                                                                                                                          Drafting a Force Sensor                              :               This video walks viewers through the process of integrating conductive materials to a waffle weave in order to make a soft force sensitive resistor. This. . . :                                                                                                                                                                       Laura                                20 Apr 2021                                                                                                                  how to:                                                                                             Getting Started             :       This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on. . . :                                                                               Laura                24 Apr 2021                                                                                                                                 How to Save Files             :       This video describes how to lead, print, and save your design files:                                                                               Laura                23 Apr 2021                                                                                                                                 Creating and Using Patterns             :       This video shows how to use the patterns window to fill regions and to create your own patterns from regions you selected on the drawdown. :                                                                               Laura                23 Apr 2021                                                                                                                                 Adding Systems and Materials             :       This video tells you about how describe the materials of your weave, how to work with warp and weft systems, and how to apply patterns to your warps and wefts. . . :                                                                               Laura                23 Apr 2021                                                                                                                                 Design Tools             :       This video will walk you through the different design tools that AdaCAD offers. :                                                                               Laura                23 Apr 2021                                                                                                                                 View Options             :       This video describes how to switch between and what is shown in yarn, draft, and circuit view. Give insight into showing and hiding weft and warp systems. :                                                                               Laura                22 Apr 2021                                                                                                                                 How to Weave a Press Button             :       This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on. . . :                                                                               Laura                21 Apr 2021                                                                                                                                 Drafting a Force Sensor             :       This video walks viewers through the process of integrating conductive materials to a waffle weave in order to make a soft force sensitive resistor. This is the technique that was. . . :                                                                               Laura                20 Apr 2021                                    ideas:                                                                                             Exosekelton for Sedimentation             :       :                                                                               Laura                23 Apr 2021                                                                                                                                 Color Changing Pressable Fabric             :       Weave with Regions of Press Sensing and Color Change Designed and Woven by Laura Devendorf Electronics and PCB Designed by Chad Di Lauro:                                                                               Laura                23 Apr 2021                                                                                                                                 Multi-Component Weave             :       Designed By: Shanel Wu; Warps: 230; Shuttles: 6:                                                                               S                23 Apr 2021                                                                                                                                 A Fabric that Remembers             :       :                                                                               Laura                23 Apr 2021                                                                                                                                 Sensor Headband             :       The draft for this file uses four systems: two base systems for elastics and support structures, and two for integrated electronics. :                                                                               Sandra                23 Apr 2021                                                                                                                                 Hidden Chevrons             :       Hidden ChevronsDesigned By: Shanel Wu; Warps: 230; Shuttles: 3:                                                                               S                23 Apr 2021                                      "
    }, {
    "id": 7,
    "url": "http://localhost:4000/learn",
    "title": "Learn AdaCAD",
    "body": "We have created a collection of resources to help you get started with AdaCAD. As a work in progress, you may not want to use it for more most important and critical projects (yet!) but feel free to play and see how it works for you.  Report Bugs, Request Features, Provide Feedback	how to:                                                                                             Getting Started             :       This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on. . . :                                                                               Laura                24 Apr 2021                                                                                                                                 How to Save Files             :       This video describes how to lead, print, and save your design files:                                                                               Laura                23 Apr 2021                                                                                                                                 Creating and Using Patterns             :       This video shows how to use the patterns window to fill regions and to create your own patterns from regions you selected on the drawdown. :                                                                               Laura                23 Apr 2021                                                                                                                                 Adding Systems and Materials             :       This video tells you about how describe the materials of your weave, how to work with warp and weft systems, and how to apply patterns to your warps and wefts. . . :                                                                               Laura                23 Apr 2021                                                                                                                                 Design Tools             :       This video will walk you through the different design tools that AdaCAD offers. :                                                                               Laura                23 Apr 2021                                                                                                                                 View Options             :       This video describes how to switch between and what is shown in yarn, draft, and circuit view. Give insight into showing and hiding weft and warp systems. :                                                                               Laura                22 Apr 2021                                                                                                                                 How to Weave a Press Button             :       This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on. . . :                                                                               Laura                21 Apr 2021                                                                                                                                 Drafting a Force Sensor             :       This video walks viewers through the process of integrating conductive materials to a waffle weave in order to make a soft force sensitive resistor. This is the technique that was. . . :                                                                               Laura                20 Apr 2021                                    Related ResourcesPrototyping Smart Textiles E-BookA textbook in progress that describes textile structures to engineers, and engineering concepts to non-engnieers Read the BookSoft Object CourseYou can follow our course curriculum and view student projects on our course webpage Check out CurriculumHow to Get What you WantIf it were not for Kobakant, we would have never been able to do this project. They offer an incredible set of resources for those interested in experimental weaving, sewing, felting, and fibering of all kinds Check out KobakantE-Textiles LoungeThe e-textiles lounge youtube channel offers several great tutorials for soft circuit projects, including great details on working with conductive yarns and multimeters. Check out E-Textiles Lounge"
    }, {
    "id": 8,
    "url": "http://localhost:4000/weavers",
    "title": "For Weavers",
    "body": "This website is built with Jekyll and Mediumish template for Jekyll. It's for demonstration purposes, no real content can be found. Mediumish template for Jekyll is compatible with Github pages, in fact even this demo is created with Github Pages and hosted with Github.  Documentation: Please, read the docs here. Questions or bug reports?: Head over to our Github repository! Buy me a coffeeThank you for your support! Your donation helps me to maintain and improve Mediumish . Buy me a coffee Documentation"
    }, {
    "id": 9,
    "url": "http://localhost:4000/robots.txt",
    "title": "",
    "body": "      Sitemap: {{ “sitemap. xml”   absolute_url }}   "
    }, {
    "id": 10,
    "url": "http://localhost:4000/page2/",
    "title": "Home",
    "body": "{% if page. url == “/” %}       Featured:       {% for post in site. posts %}    {% if post. featured == true %}      {% include featuredbox. html %}    {% endif %}  {% endfor %}  {% endif %}   {% for category in site. categories %}&lt;h2 id= {{ category[0] | replace:    , -  }} &gt;{{ category[0] }}&lt;/h2&gt;{% assign pages_list = category[1] %}{% for post in pages_list %}{% if post. title != null %}{% if group == null or group == post. group %}{% include postbox. html %}{% endif %}{% endif %}{% endfor %}{% assign pages_list = nil %}{% assign group = nil %}{% endfor %}  "
    }, {
    "id": 11,
    "url": "http://localhost:4000/page3/",
    "title": "Home",
    "body": "{% if page. url == “/” %}       Featured:       {% for post in site. posts %}    {% if post. featured == true %}      {% include featuredbox. html %}    {% endif %}  {% endfor %}  {% endif %}   {% for category in site. categories %}&lt;h2 id= {{ category[0] | replace:    , -  }} &gt;{{ category[0] }}&lt;/h2&gt;{% assign pages_list = category[1] %}{% for post in pages_list %}{% if post. title != null %}{% if group == null or group == post. group %}{% include postbox. html %}{% endif %}{% endif %}{% endfor %}{% assign pages_list = nil %}{% assign group = nil %}{% endfor %}  "
    }, {
    "id": 12,
    "url": "http://localhost:4000/getting-started/",
    "title": "Getting Started",
    "body": "2021/04/24 - This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on the number of frames and treadles you are weaving with. "
    }, {
    "id": 13,
    "url": "http://localhost:4000/sedimentation/",
    "title": "Exosekelton for Sedimentation",
    "body": "2021/04/23 - "
    }, {
    "id": 14,
    "url": "http://localhost:4000/save-files/",
    "title": "How to Save Files",
    "body": "2021/04/23 - This video describes how to lead, print, and save your design files "
    }, {
    "id": 15,
    "url": "http://localhost:4000/region-weave/",
    "title": "Color Changing Pressable Fabric",
    "body": "2021/04/23 - Weave with Regions of Press Sensing and Color Change Designed and Woven by Laura Devendorf Electronics and PCB Designed by Chad Di LauroSummary: This fabric uses a double woven structure and inlay techniques to create three adjacent regions that can sense press and change color in response. We used a stainless steel conductive yarn to integrate press pads into the back of the double layer weave, and a custom made color changing yarn integrated into the front face of the weave. The weave is designed such that all of the connecting wires are routed to the left side of the fabric. We developed a custom PCB and code that can sense the pressing and provide power to the appropriate regions. Additionally, we made a custom prototype with 9 total sections (3 consecutive sections of this pattern) that can be controlled by pressing or by a musical controller called a “Monome”, which allows someone to essentially use button inputs to control the color pattern on the fabric. Equipment Specifics: This fabric was woven by hand on an 8 shaft baby wolf, warped at 20 ends per inch with 10/2 pearl cotton. The weave is 300 ends wide (15” wide). Note, the tie up for this draft supports most of the weaving operations, but integrating the color changing sections was accomplished by hand during the weaving process by alternating the types of yarn along the row. Yarns:  Stainless Steel Conductive Thread (Button) Custom Made Thermochromic Yarns (details to making this thread can be found in the additional resources section) (Thermochromic) 10/2 Pearl Cotton in Natural (Regular Yarn)Weaving Files:  AdaCAD Draft View Annotations Draw DownShuttles: Weaving each section requires 12 shuttles to be in use at one time. We label the shuttles below and color code them in the draft  Regular Yarn 1 (R1) - for use on the top layer of the double weave Regular Yarn 2 (R2) - for use on the bottom layer of the double weave Regular Yarn 3 (R3) - for use on the top layer in regions where a thermochromic regions splits the left and right sides of the fabric Button 1/Top (B1/T) - integrated as a supplemental warp in the first button segment Button 1/Bottom (B1/B) - for use creating the first press region on the bottom layer of the double weave Button 2/Top (B2/T) - integrated as a supplemental warp in the second button segment Button 2/Bottom (B2/B) - for use creating the second press region on the bottom layer of the double weave Button 3/Top (B3/T) - integrated as a supplemental warp in the second button segment Button 3/Bottom (B3/B) - for use creating the thrid press region on the bottom layer of the double weave Thermochromic 1 (C1) - for the first color changing region Thermochromic 2 (C2) - for the second color changing region Thermochromic 3 (C3) - for the third color changing regionFinal Results: Additional Resources:  More Project Details and Production Instructions Publication at TEI 2019"
    }, {
    "id": 16,
    "url": "http://localhost:4000/patterns/",
    "title": "Creating and Using Patterns",
    "body": "2021/04/23 - This video shows how to use the patterns window to fill regions and to create your own patterns from regions you selected on the drawdown. "
    }, {
    "id": 17,
    "url": "http://localhost:4000/multicomponent/",
    "title": "Multi-Component Weave",
    "body": "2021/04/23 - Designed By: Shanel Wu; Warps: 230; Shuttles: 6 Loom: Schacht Baby Wolf (8-shaft): Warp Yarns:  10/2 Pearl cotton in black and whiteWeft Yarns:  (10P) 10/2 Pearl cotton in black (-B) and white (-W) (SS) stainless steel conductive yarn (CC) dyed thermochromic cotton-covered copper conductive yarnShuttles:  Ground fabric (10P-B) Pressure sensor (10P-W + SS) Ground fabric when split (10P-B) Thermochromic (CC) Pocket (10P-W) Pocket when split (10P-W)Function: This Multi-Component Weave design shows how a woven smart textile can be a complete embedded system, handling real-time inputs and outputs to achieve a specific function. The weaving integrates a sensor input (pressure) and an output (color change) into the fabric structure, while creating a pocket for an external PCB (e. g. an Arduino microprocessor) to integrate processing. This mixture of techniques and materials demonstrates how the weaving process can be used to develop complex, multi-functional smart textiles. The color-changing region has been documented in other projects, but I describe the pressure sensor and pocket in more detail below. Pressure Sensor: The pressure sensor was created with a woven structure (stitch) called waffle weave. Waffle weave is a textured structure often used in towels because its airiness makes it highly absorbent. When woven using a conductive yarn along with a non-conductive yarn (I used stainless steel with 10/2 Pearl cotton yarn), the structure is highly resistive when uncompressed, and then decreases significantly in resistance when compressed. This pressure-sensing fabric references the work on this Kobakant page.  Double Woven Pocket: The pocket was created using double weave. Double weaving is a class of woven structure that allows two layers of fabric to be woven simultaneously, making pockets, tunnels, and other topologies possible. During weaving, the pocket was also separated into two shuttles to create a slit for easy access to the microcontroller’s power switch. Draft Notes: Currently, there is no large, “master” draft for this piece. Because I was using a non-digital loom, I found it more helpful to use small unit drafts to represent certain sections as instructions for myself. The files are bitmaps of these unit drafts. Files:  Draft Bitmap Waffle Unit Bitmap"
    }, {
    "id": 18,
    "url": "http://localhost:4000/memory/",
    "title": "A Fabric that Remembers",
    "body": "2021/04/23 - "
    }, {
    "id": 19,
    "url": "http://localhost:4000/materials/",
    "title": "Adding Systems and Materials",
    "body": "2021/04/23 - This video tells you about how describe the materials of your weave, how to work with warp and weft systems, and how to apply patterns to your warps and wefts using Actions. "
    }, {
    "id": 20,
    "url": "http://localhost:4000/headband/",
    "title": "Sensor Headband",
    "body": "2021/04/23 - The draft for this file uses four systems: two base systems for elastics and support structures, and two for integrated electronics. The complete draft rendering is shown here: You can see the base materials here: You can see the integrated materials here "
    }, {
    "id": 21,
    "url": "http://localhost:4000/design-basics/",
    "title": "Design Tools",
    "body": "2021/04/23 - This video will walk you through the different design tools that AdaCAD offers. "
    }, {
    "id": 22,
    "url": "http://localhost:4000/chevrons/",
    "title": "Hidden Chevrons",
    "body": "2021/04/23 - Hidden ChevronsDesigned By: Shanel Wu; Warps: 230; Shuttles: 3 Loom: Schacht Baby Wolf (8-shaft): Warp Yarns:  10/2 Pearl cotton in black and whiteWeft Yarns:  (20PR) 20/2 Pearl cotton in purple (CC) dyed thermochromic cotton-covered copper conductive yarnShuttles:  Ground fabric (20PR) Chevron 1 (CC) Chevron 2 (CC)Function: This Hidden Chevrons design is a woven fabric of two chevrons created using thermochromic yarn and interlaced on the fabric design (i. e. one continuous thread of thermochromic yarn is used for each chevron). Each chevron can be independently activated, thus allowingthe fabric to have four visual states. Draft Notes: The main technical challenge was sufficiently isolating two different thermochromic yarns so that they did not heat each other up when only one was active. To design this draft, I started in AdaCAD by creating a large canvas and filling it with the desired stitch, representing the background fabric. The thermochromic yarn images were to be woven as supplemental wefts, isolated regions where the pattern of the base weft yarn is duplicated by another yarn, in this case a thermochromic yarn. This supplemental weft could be represented in AdaCAD by cloning particular rows and assigning these cloned rows to two different thermochromic shuttles. This process allowed me to determine the sequence of shuttles to be used during weaving. Once this structure was set, I was able to isolate each thermochromic shuttle for weaving. In the final design, two rows of cotton separated each row of thermochromic yarn. Future iterations of the interwoven, hidden images idea could take advantage of the the image to shuttle feature in AdaCAD and import the desired image, defining the specific path of the supplemental weft within the fabric to reveal the image. Files:  Draft Bitmap AdaCAD Canvas for Chevron"
    }, {
    "id": 23,
    "url": "http://localhost:4000/view-options/",
    "title": "View Options",
    "body": "2021/04/22 - This video describes how to switch between and what is shown in yarn, draft, and circuit view. Give insight into showing and hiding weft and warp systems. "
    }, {
    "id": 24,
    "url": "http://localhost:4000/press-button/",
    "title": "How to Weave a Press Button",
    "body": "2021/04/21 - This video will walk you through how to start your very first draft with AdaCAD. It also shows you how AdaCAD generates you a random draft to start based on the number of frames and treadles you are weaving with. . . . . . "
    }, {
    "id": 25,
    "url": "http://localhost:4000/waffle-force-sensor/",
    "title": "Drafting a Force Sensor",
    "body": "2021/04/20 - This video walks viewers through the process of integrating conductive materials to a waffle weave in order to make a soft force sensitive resistor. This is the technique that was used to create the exoskeleton for sedimentation shown here   "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>No results found...</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow-lg" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><small><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>Sorry, no results found. Close & try a different search!</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});